@model IEnumerable<EasyGames.Models.Product>
@{
    ViewData["Title"] = "Manage Stock";
    var list = (Model ?? Enumerable.Empty<EasyGames.Models.Product>()).ToList();
    var categories = list
        .Where(p => !string.IsNullOrWhiteSpace(p.Category))
        .Select(p => p.Category!.Trim())
        .Distinct(StringComparer.OrdinalIgnoreCase)
        .OrderBy(c => c)
        .ToList();

    string Thumb(string? url) =>
        string.IsNullOrWhiteSpace(url)
            ? "https://via.placeholder.com/120x120?text=No+Image"
            : url;
}

<style>
    .toolbar { display:flex; align-items:center; gap:.75rem; flex-wrap:wrap; }
    .table thead th { position: sticky; top: 0; background: var(--bs-body-bg); z-index: 1; }
    .thumb { width:64px; height:64px; object-fit:cover; border-radius:.5rem; border:1px solid rgba(0,0,0,.08); }
    .pill { cursor:pointer; }
    .pill.active { background: var(--bs-primary); color: #fff; }
    .pill:not(.active){ background: var(--bs-light); color: var(--bs-body-color); }
    .small-muted { font-size:.875rem; color: var(--bs-secondary-color); }

   
    .cat-blue { color: var(--bs-primary) !important; font-weight:600; }
    .stock-default { color: var(--bs-body-color) !important; font-weight:600; }
    .name-cell { min-width: 240px; }
    .image-url { max-width: 240px; overflow:hidden; text-overflow:ellipsis; white-space:nowrap; display:inline-block; vertical-align:bottom; }
</style>

<div class="d-flex justify-content-between align-items-center my-3">
    <h1 class="m-0">Manage Stock</h1>
    <a asp-action="Create" class="btn btn-primary">
        + Create New
    </a>
</div>

<div class="toolbar mb-3">
    <div class="input-group" style="max-width:420px">
        <span class="input-group-text">Search</span>
        <input id="searchBox" type="search" class="form-control" placeholder="name, description, category..." />
    </div>

    <div class="d-flex align-items-center gap-2 flex-wrap">
        <span class="small-muted me-1">Category:</span>
        <button type="button" class="pill btn btn-sm active" data-cat="">All</button>
        @foreach (var c in categories)
        {
            <button type="button" class="pill btn btn-sm" data-cat="@c">@c</button>
        }
    </div>

    <div class="ms-auto small-muted">
        <span id="countFiltered">@list.Count</span> / @list.Count items
    </div>
</div>

<div class="table-responsive border rounded-3">
<table class="table align-middle table-hover mb-0">
    <thead>
        <tr>
            <th style="width:80px">Image</th>
            <th class="name-cell">Name</th>
            <th style="width:140px">Category</th>
            <th style="width:120px">Price</th>
            <th style="width:120px">Stock</th>
            <th>ImageUrl</th>
            <th style="width:220px"></th>
        </tr>
    </thead>
    <tbody id="prodBody">
    @foreach (var p in list.OrderBy(p => p.Category).ThenBy(p => p.Name))
    {
        <tr class="prod-row"
            data-name="@p.Name?.ToLowerInvariant()"
            data-cat="@p.Category?.ToLowerInvariant()"
            data-desc="@p.Description?.ToLowerInvariant()">
            <td>
                <img src="@Thumb(p.ImageUrl)" alt="thumb" class="thumb" />
            </td>
            <td>
                <div class="fw-semibold">@p.Name</div>
                @if (!string.IsNullOrWhiteSpace(p.Description))
                {
                    <div class="small-muted">@p.Description</div>
                }
            </td>
            <td>
                @if (!string.IsNullOrWhiteSpace(p.Category))
                {
                    <span class="cat-blue">@p.Category</span>  
                }
                else
                {
                    <span class="text-muted">—</span>
                }
            </td>
            <td>
                $@p.Price.ToString("0.00")
            </td>
            <td>
                <span class="stock-default">@p.Stock</span>  
            </td>
            <td>
                @if (!string.IsNullOrWhiteSpace(p.ImageUrl))
                {
                    <a class="image-url" href="@p.ImageUrl" target="_blank">@p.ImageUrl</a>
                }
            </td>
            <td class="text-end">
                <div class="btn-group">
                    <a asp-action="Edit" asp-route-id="@p.Id" class="btn btn-sm btn-primary">Edit</a>
                    <a asp-action="Details" asp-route-id="@p.Id" class="btn btn-sm btn-outline-secondary">Details</a>
                    <a asp-action="Delete" asp-route-id="@p.Id" class="btn btn-sm btn-outline-danger">Delete</a>
                </div>
            </td>
        </tr>
    }
    </tbody>
</table>
</div>

@section Scripts{
<script>
(function(){
  const q = document.getElementById('searchBox');
  const pills = document.querySelectorAll('.pill');
  const rows = Array.from(document.querySelectorAll('.prod-row'));
  const counter = document.getElementById('countFiltered');

  let activeCat = "";

  pills.forEach(btn=>{
    btn.addEventListener('click', ()=>{
      pills.forEach(b=>b.classList.remove('active'));
      btn.classList.add('active');
      activeCat = (btn.dataset.cat || "").toLowerCase();
      apply();
    });
  });

  q.addEventListener('input', apply);

  function apply(){
    const term = (q.value || "").toLowerCase().trim();
    let visible = 0;

    rows.forEach(tr=>{
      const name = tr.dataset.name || "";
      const cat  = tr.dataset.cat  || "";
      const desc = tr.dataset.desc || "";

      const matchText = !term || name.includes(term) || desc.includes(term) || cat.includes(term);
      const matchCat = !activeCat || cat === activeCat.toLowerCase();

      const ok = matchText && matchCat;
      tr.style.display = ok ? "" : "none";
      if (ok) visible++;
    });

    if (counter) counter.textContent = visible;
  }

  apply();
})();
</script>
}
